[X] Создание API для аутентификации:
    [X] Реализуйте регистрацию и аутентификацию пользователей.
    [X] Используйте JWT (JSON Web Tokens) для обработки аутентификации.
[X] Интеграция с базой данных PostgreSQL с использованием TypeORM:
    [X] Настройте соединение с базой данных.
    [X] Используйте миграции для управления структурой базы данных.
[X] Разработка CRUD API для сущности "Статья":
    [X] Структура "Статьи" должна включать: название, описание, дату публикации, автора.
    [X] Реализуйте операции создания, чтения, обновления и удаления статей.
    [X] Обеспечьте валидацию входных данных.
    [X] Реализуйте пагинацию для запросов списка статей.
    [] Добавьте возможность фильтрации статей по различным критериям (например, по дате публикации, автору).
    [X] Создание и обновление статей, должны быть закрыты авторизацией
[X] Реализация кэширования с использованием Redis:
    [X] Кэшируйте результаты запросов на чтение статей.
    [X] Обеспечьте инвалидацию кэша при обновлении или удалении статей.
[50/50] Тестирование:
    [] Напишите unit-тесты для проверки бизнес-логики. // ACTUAL: Сделано на 50/50, покрыты тестами service/controller у post/user. Очень много времени на проработку надо, мало относительно опыта тестов unit